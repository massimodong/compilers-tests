#include<stdio.h>
#include<algorithm>
#include<iostream>
using namespace std;
const int maxn=1E5+77;
double INF=1.0 / 0.0;

int T,N;
pair<double, double> M[maxn];

pair<double, int> stku[maxn],stkd[maxn];
int cu,cd;

bool cmp(pair<double, double> a, pair<double, double >b){
	if(a.first != b.first) return a.first < b.first;
	else return a.second > b.second;
}

double cross(int a,int b){
	return (M[b].second-M[a].second)/(M[a].first-M[b].first);
}

double getY(int i, double x){
	double ret = M[i].first * x + M[i].second;
	//cerr<<"y:"<<ret<<endl;
	return ret;
}

double calc0(){
	double u=-INF, d=INF;
	for(int i=0;i<N;++i){
		if(M[i].second > u) u=M[i].second;
		if(M[i].second < d) d=M[i].second;
	}
	return u-d;
}

int main(){
	for(scanf("%d",&T);T;--T){
		cu=cd=0;
		scanf("%d",&N);
		for(int i=0;i<N;++i){
			scanf("%lf%lf",&M[i].second,&M[i].first);
		}
		sort(M,M+N, cmp);

		//for(int i=0;i<N;++i) cerr<<M[i].first<<"--"<<M[i].second<<endl;

		stku[cu++]=make_pair(-INF,0);
		for(int i=1;i<N;++i){
			if(M[i].first == M[i-1].first) continue;
			while(true){
				double x=cross(stku[cu-1].second, i);
				if(x==-INF) break;
				//cerr<<"x:"<<x<<endl;
				if(x<stku[cu-1].first) --cu;
				else{
					stku[cu++]=make_pair(x, i);
					break;
				}
			}
		}

		stkd[cd++]=make_pair(-INF, N-1);
		for(int i=N-2;i>=0;--i){
			if(M[i].first == M[i+1].first) continue;
			while(true){
				double x=cross(stkd[cd-1].second, i);
				if(x==INF) break;
				//cerr<<"x:"<<x<<endl;
				if(x < stkd[cd-1].first) --cd;
				else{
					stkd[cd++]=make_pair(x, i);
					break;
				}
			}
		}

		int c=0;

		double ans=INF;
		//cerr<<"ans:"<<ans<<endl;

		/*
		   for(int i=0;i<cu;++i) cerr<<stku[i].first<<","<<stku[i].second<<endl;
		   for(int i=0;i<cd;++i) cerr<<stkd[i].first<<","<<stkd[i].second<<endl;
		   */

		for(int i=1;i<cu;++i){
			while(c+1 < cd && stkd[c+1].first < stku[i].first) ++c;
			if(stku[i].first > 0) ans=min(ans, getY(stku[i].second, stku[i].first) - getY(stkd[c].second, stku[i].first));
			//cerr<<"ans:"<<ans<<endl;
		}

		c=0;

		for(int i=1;i<cd;++i){
			while(c+1 < cu && stku[c+1].first < stkd[i].first) ++c;
			if(stkd[i].first > 0) ans=min(ans, getY(stku[c].second, stkd[i].first) - getY(stkd[i].second, stkd[i].first));
			//cerr<<"ans:"<<ans<<endl;
		}

		ans=min(ans, calc0());

		printf("%.10lf\n", ans);
	}
}
